---
- name: Remove app if exists
  shell: if [ -e /tmp/guestbook.yaml ]; then kubectl --kubeconfig /etc/kubernetes/admin.conf delete -f /tmp/guestbook.yaml; rm /tmp/guestbook.yaml; else echo "Existing file not found"; fi
  
- name: Remove Groups if exists
  command: netctl group rm {{ item.value.epg_name }}
  with_dict: "{{ contiv_groups['PHPGuestbook'] }}"
  ignore_errors: yes

- name: Remove Policy Groups
  command: netctl policy rm {{ item.value.policy_name }}
  with_dict: "{{ contiv_groups['PHPGuestbook'] }}"
  ignore_errors: yes
 
- name: Create Policy Groups
  command: netctl policy create {{ item.value.policy_name }}
  with_dict: "{{ contiv_groups['PHPGuestbook'] }}"

- name: Configure Endpoint Groups
  command: netctl group create {{ item.value.network_name }} {{ item.value.epg_name }} -p {{ item.value.policy_name }}
  with_dict: "{{ contiv_groups['PHPGuestbook'] }}"
 
- name: Create Policy Rules
  command: netctl policy rule-add {{ item.0.policy_name }} {{ item.1 }}
  with_subelements: 
    - "{{ contiv_groups['PHPGuestbook'] }}"
    - policy_rules

 
- name: Copy Guestbook YAML to host
  template:
    src: guestbook.yaml
    dest: /tmp/guestbook.yaml

- name: Deploying PHP Guestbook application with Redis
  command: "kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f /tmp/guestbook.yaml"
  when: inject_sidecar == false

- name: Deploying PHP Guestbook application with Redis with Istio
  shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf create -f <(istioctl kube-inject -f /tmp/guestbook.yaml)"
  when: inject_sidecar == true
